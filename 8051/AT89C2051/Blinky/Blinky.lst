                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.0 #15242 (Mac OS X ppc)
                                      4 ;--------------------------------------------------------
                                      5 	.module Blinky
                                      6 	
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _delay
                                     13 	.globl _TF1
                                     14 	.globl _TR1
                                     15 	.globl _TF0
                                     16 	.globl _TR0
                                     17 	.globl _IE1
                                     18 	.globl _IT1
                                     19 	.globl _IE0
                                     20 	.globl _IT0
                                     21 	.globl _SM0
                                     22 	.globl _SM1
                                     23 	.globl _SM2
                                     24 	.globl _REN
                                     25 	.globl _TB8
                                     26 	.globl _RB8
                                     27 	.globl _TI
                                     28 	.globl _RI
                                     29 	.globl _CY
                                     30 	.globl _AC
                                     31 	.globl _F0
                                     32 	.globl _RS1
                                     33 	.globl _RS0
                                     34 	.globl _OV
                                     35 	.globl _F1
                                     36 	.globl _P
                                     37 	.globl _RD
                                     38 	.globl _WR
                                     39 	.globl _T1
                                     40 	.globl _T0
                                     41 	.globl _INT1
                                     42 	.globl _INT0
                                     43 	.globl _TXD0
                                     44 	.globl _TXD
                                     45 	.globl _RXD0
                                     46 	.globl _RXD
                                     47 	.globl _P3_7
                                     48 	.globl _P3_6
                                     49 	.globl _P3_5
                                     50 	.globl _P3_4
                                     51 	.globl _P3_3
                                     52 	.globl _P3_2
                                     53 	.globl _P3_1
                                     54 	.globl _P3_0
                                     55 	.globl _P1_7
                                     56 	.globl _P1_6
                                     57 	.globl _P1_5
                                     58 	.globl _P1_4
                                     59 	.globl _P1_3
                                     60 	.globl _P1_2
                                     61 	.globl _P1_1
                                     62 	.globl _P1_0
                                     63 	.globl _PS
                                     64 	.globl _PT1
                                     65 	.globl _PX1
                                     66 	.globl _PT0
                                     67 	.globl _PX0
                                     68 	.globl _EA
                                     69 	.globl _ES
                                     70 	.globl _ET1
                                     71 	.globl _EX1
                                     72 	.globl _ET0
                                     73 	.globl _EX0
                                     74 	.globl _BREG_F7
                                     75 	.globl _BREG_F6
                                     76 	.globl _BREG_F5
                                     77 	.globl _BREG_F4
                                     78 	.globl _BREG_F3
                                     79 	.globl _BREG_F2
                                     80 	.globl _BREG_F1
                                     81 	.globl _BREG_F0
                                     82 	.globl _TMOD
                                     83 	.globl _TL1
                                     84 	.globl _TL0
                                     85 	.globl _TH1
                                     86 	.globl _TH0
                                     87 	.globl _TCON
                                     88 	.globl _SP
                                     89 	.globl _SCON
                                     90 	.globl _SBUF0
                                     91 	.globl _SBUF
                                     92 	.globl _PSW
                                     93 	.globl _PCON
                                     94 	.globl _P3
                                     95 	.globl _P1
                                     96 	.globl _IP
                                     97 	.globl _IE
                                     98 	.globl _DP0L
                                     99 	.globl _DPL
                                    100 	.globl _DP0H
                                    101 	.globl _DPH
                                    102 	.globl _B
                                    103 	.globl _ACC
                                    104 ;--------------------------------------------------------
                                    105 ; special function registers
                                    106 ;--------------------------------------------------------
                                    107 	.area RSEG    (ABS,DATA)
      000000                        108 	.org 0x0000
                           0000E0   109 _ACC	=	0x00e0
                           0000F0   110 _B	=	0x00f0
                           000083   111 _DPH	=	0x0083
                           000083   112 _DP0H	=	0x0083
                           000082   113 _DPL	=	0x0082
                           000082   114 _DP0L	=	0x0082
                           0000A8   115 _IE	=	0x00a8
                           0000B8   116 _IP	=	0x00b8
                           000090   117 _P1	=	0x0090
                           0000B0   118 _P3	=	0x00b0
                           000087   119 _PCON	=	0x0087
                           0000D0   120 _PSW	=	0x00d0
                           000099   121 _SBUF	=	0x0099
                           000099   122 _SBUF0	=	0x0099
                           000098   123 _SCON	=	0x0098
                           000081   124 _SP	=	0x0081
                           000088   125 _TCON	=	0x0088
                           00008C   126 _TH0	=	0x008c
                           00008D   127 _TH1	=	0x008d
                           00008A   128 _TL0	=	0x008a
                           00008B   129 _TL1	=	0x008b
                           000089   130 _TMOD	=	0x0089
                                    131 ;--------------------------------------------------------
                                    132 ; special function bits
                                    133 ;--------------------------------------------------------
                                    134 	.area RSEG    (ABS,DATA)
      000000                        135 	.org 0x0000
                           0000F0   136 _BREG_F0	=	0x00f0
                           0000F1   137 _BREG_F1	=	0x00f1
                           0000F2   138 _BREG_F2	=	0x00f2
                           0000F3   139 _BREG_F3	=	0x00f3
                           0000F4   140 _BREG_F4	=	0x00f4
                           0000F5   141 _BREG_F5	=	0x00f5
                           0000F6   142 _BREG_F6	=	0x00f6
                           0000F7   143 _BREG_F7	=	0x00f7
                           0000A8   144 _EX0	=	0x00a8
                           0000A9   145 _ET0	=	0x00a9
                           0000AA   146 _EX1	=	0x00aa
                           0000AB   147 _ET1	=	0x00ab
                           0000AC   148 _ES	=	0x00ac
                           0000AF   149 _EA	=	0x00af
                           0000B8   150 _PX0	=	0x00b8
                           0000B9   151 _PT0	=	0x00b9
                           0000BA   152 _PX1	=	0x00ba
                           0000BB   153 _PT1	=	0x00bb
                           0000BC   154 _PS	=	0x00bc
                           000090   155 _P1_0	=	0x0090
                           000091   156 _P1_1	=	0x0091
                           000092   157 _P1_2	=	0x0092
                           000093   158 _P1_3	=	0x0093
                           000094   159 _P1_4	=	0x0094
                           000095   160 _P1_5	=	0x0095
                           000096   161 _P1_6	=	0x0096
                           000097   162 _P1_7	=	0x0097
                           0000B0   163 _P3_0	=	0x00b0
                           0000B1   164 _P3_1	=	0x00b1
                           0000B2   165 _P3_2	=	0x00b2
                           0000B3   166 _P3_3	=	0x00b3
                           0000B4   167 _P3_4	=	0x00b4
                           0000B5   168 _P3_5	=	0x00b5
                           0000B6   169 _P3_6	=	0x00b6
                           0000B7   170 _P3_7	=	0x00b7
                           0000B0   171 _RXD	=	0x00b0
                           0000B0   172 _RXD0	=	0x00b0
                           0000B1   173 _TXD	=	0x00b1
                           0000B1   174 _TXD0	=	0x00b1
                           0000B2   175 _INT0	=	0x00b2
                           0000B3   176 _INT1	=	0x00b3
                           0000B4   177 _T0	=	0x00b4
                           0000B5   178 _T1	=	0x00b5
                           0000B6   179 _WR	=	0x00b6
                           0000B7   180 _RD	=	0x00b7
                           0000D0   181 _P	=	0x00d0
                           0000D1   182 _F1	=	0x00d1
                           0000D2   183 _OV	=	0x00d2
                           0000D3   184 _RS0	=	0x00d3
                           0000D4   185 _RS1	=	0x00d4
                           0000D5   186 _F0	=	0x00d5
                           0000D6   187 _AC	=	0x00d6
                           0000D7   188 _CY	=	0x00d7
                           000098   189 _RI	=	0x0098
                           000099   190 _TI	=	0x0099
                           00009A   191 _RB8	=	0x009a
                           00009B   192 _TB8	=	0x009b
                           00009C   193 _REN	=	0x009c
                           00009D   194 _SM2	=	0x009d
                           00009E   195 _SM1	=	0x009e
                           00009F   196 _SM0	=	0x009f
                           000088   197 _IT0	=	0x0088
                           000089   198 _IE0	=	0x0089
                           00008A   199 _IT1	=	0x008a
                           00008B   200 _IE1	=	0x008b
                           00008C   201 _TR0	=	0x008c
                           00008D   202 _TF0	=	0x008d
                           00008E   203 _TR1	=	0x008e
                           00008F   204 _TF1	=	0x008f
                                    205 ;--------------------------------------------------------
                                    206 ; overlayable register banks
                                    207 ;--------------------------------------------------------
                                    208 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        209 	.ds 8
                                    210 ;--------------------------------------------------------
                                    211 ; internal ram data
                                    212 ;--------------------------------------------------------
                                    213 	.area DSEG    (DATA)
                                    214 ;--------------------------------------------------------
                                    215 ; overlayable items in internal ram
                                    216 ;--------------------------------------------------------
                                    217 	.area	OSEG    (OVR,DATA)
                                    218 ;--------------------------------------------------------
                                    219 ; Stack segment in internal ram
                                    220 ;--------------------------------------------------------
                                    221 	.area SSEG
      000000                        222 __start__stack:
      000000                        223 	.ds	1
                                    224 
                                    225 ;--------------------------------------------------------
                                    226 ; indirectly addressable internal ram data
                                    227 ;--------------------------------------------------------
                                    228 	.area ISEG    (DATA)
                                    229 ;--------------------------------------------------------
                                    230 ; absolute internal ram data
                                    231 ;--------------------------------------------------------
                                    232 	.area IABS    (ABS,DATA)
                                    233 	.area IABS    (ABS,DATA)
                                    234 ;--------------------------------------------------------
                                    235 ; bit data
                                    236 ;--------------------------------------------------------
                                    237 	.area BSEG    (BIT)
                                    238 ;--------------------------------------------------------
                                    239 ; paged external ram data
                                    240 ;--------------------------------------------------------
                                    241 	.area PSEG    (PAG,XDATA)
                                    242 ;--------------------------------------------------------
                                    243 ; uninitialized external ram data
                                    244 ;--------------------------------------------------------
                                    245 	.area XSEG    (XDATA)
                                    246 ;--------------------------------------------------------
                                    247 ; absolute external ram data
                                    248 ;--------------------------------------------------------
                                    249 	.area XABS    (ABS,XDATA)
                                    250 ;--------------------------------------------------------
                                    251 ; initialized external ram data
                                    252 ;--------------------------------------------------------
                                    253 	.area XISEG   (XDATA)
                                    254 	.area HOME    (CODE)
                                    255 	.area GSINIT0 (CODE)
                                    256 	.area GSINIT1 (CODE)
                                    257 	.area GSINIT2 (CODE)
                                    258 	.area GSINIT3 (CODE)
                                    259 	.area GSINIT4 (CODE)
                                    260 	.area GSINIT5 (CODE)
                                    261 	.area GSINIT  (CODE)
                                    262 	.area GSFINAL (CODE)
                                    263 	.area CSEG    (CODE)
                                    264 ;--------------------------------------------------------
                                    265 ; interrupt vector
                                    266 ;--------------------------------------------------------
                                    267 	.area HOME    (CODE)
      000000                        268 __interrupt_vect:
      000000 02r00r00         [24]  269 	ljmp	__sdcc_gsinit_startup
                                    270 ; restartable atomic support routines
      000003                        271 	.ds	5
      000008                        272 sdcc_atomic_exchange_rollback_start::
      000008 00               [12]  273 	nop
      000009 00               [12]  274 	nop
      00000A                        275 sdcc_atomic_exchange_pdata_impl:
      00000A E2               [24]  276 	movx	a, @r0
      00000B FB               [12]  277 	mov	r3, a
      00000C EA               [12]  278 	mov	a, r2
      00000D F2               [24]  279 	movx	@r0, a
      00000E 80 2C            [24]  280 	sjmp	sdcc_atomic_exchange_exit
      000010 00               [12]  281 	nop
      000011 00               [12]  282 	nop
      000012                        283 sdcc_atomic_exchange_xdata_impl:
      000012 E0               [24]  284 	movx	a, @dptr
      000013 FB               [12]  285 	mov	r3, a
      000014 EA               [12]  286 	mov	a, r2
      000015 F0               [24]  287 	movx	@dptr, a
      000016 80 24            [24]  288 	sjmp	sdcc_atomic_exchange_exit
      000018                        289 sdcc_atomic_compare_exchange_idata_impl:
      000018 E6               [12]  290 	mov	a, @r0
      000019 B5 02 02         [24]  291 	cjne	a, ar2, .+#5
      00001C EB               [12]  292 	mov	a, r3
      00001D F6               [12]  293 	mov	@r0, a
      00001E 22               [24]  294 	ret
      00001F 00               [12]  295 	nop
      000020                        296 sdcc_atomic_compare_exchange_pdata_impl:
      000020 E2               [24]  297 	movx	a, @r0
      000021 B5 02 02         [24]  298 	cjne	a, ar2, .+#5
      000024 EB               [12]  299 	mov	a, r3
      000025 F2               [24]  300 	movx	@r0, a
      000026 22               [24]  301 	ret
      000027 00               [12]  302 	nop
      000028                        303 sdcc_atomic_compare_exchange_xdata_impl:
      000028 E0               [24]  304 	movx	a, @dptr
      000029 B5 02 02         [24]  305 	cjne	a, ar2, .+#5
      00002C EB               [12]  306 	mov	a, r3
      00002D F0               [24]  307 	movx	@dptr, a
      00002E 22               [24]  308 	ret
      00002F                        309 sdcc_atomic_exchange_rollback_end::
                                    310 
      00002F                        311 sdcc_atomic_exchange_gptr_impl::
      00002F 30 F6 E0         [24]  312 	jnb	b.6, sdcc_atomic_exchange_xdata_impl
      000032 A8 82            [24]  313 	mov	r0, dpl
      000034 20 F5 D3         [24]  314 	jb	b.5, sdcc_atomic_exchange_pdata_impl
      000037                        315 sdcc_atomic_exchange_idata_impl:
      000037 EA               [12]  316 	mov	a, r2
      000038 C6               [12]  317 	xch	a, @r0
      000039 F5 82            [12]  318 	mov	dpl, a
      00003B 22               [24]  319 	ret
      00003C                        320 sdcc_atomic_exchange_exit:
      00003C 8B 82            [24]  321 	mov	dpl, r3
      00003E 22               [24]  322 	ret
      00003F                        323 sdcc_atomic_compare_exchange_gptr_impl::
      00003F 30 F6 E6         [24]  324 	jnb	b.6, sdcc_atomic_compare_exchange_xdata_impl
      000042 A8 82            [24]  325 	mov	r0, dpl
      000044 20 F5 D9         [24]  326 	jb	b.5, sdcc_atomic_compare_exchange_pdata_impl
      000047 80 CF            [24]  327 	sjmp	sdcc_atomic_compare_exchange_idata_impl
                                    328 ;--------------------------------------------------------
                                    329 ; global & static initialisations
                                    330 ;--------------------------------------------------------
                                    331 	.area HOME    (CODE)
                                    332 	.area GSINIT  (CODE)
                                    333 	.area GSFINAL (CODE)
                                    334 	.area GSINIT  (CODE)
                                    335 	.globl __sdcc_gsinit_startup
                                    336 	.globl __sdcc_program_startup
                                    337 	.globl __start__stack
                                    338 	.globl __mcs51_genXINIT
                                    339 	.globl __mcs51_genXRAMCLEAR
                                    340 	.globl __mcs51_genRAMCLEAR
                                    341 	.area GSFINAL (CODE)
      000000 02r00r49         [24]  342 	ljmp	__sdcc_program_startup
                                    343 ;--------------------------------------------------------
                                    344 ; Home
                                    345 ;--------------------------------------------------------
                                    346 	.area HOME    (CODE)
                                    347 	.area HOME    (CODE)
      000049                        348 __sdcc_program_startup:
      000049 02r00r16         [24]  349 	ljmp	_main
                                    350 ;	return from main will return to caller
                                    351 ;--------------------------------------------------------
                                    352 ; code
                                    353 ;--------------------------------------------------------
                                    354 	.area CSEG    (CODE)
                                    355 ;------------------------------------------------------------
                                    356 ;Allocation info for local variables in function 'delay'
                                    357 ;------------------------------------------------------------
                                    358 ;i             Allocated to registers r7 
                                    359 ;j             Allocated to registers r5 r6 
                                    360 ;------------------------------------------------------------
                                    361 ;	Blinky.c:18: void delay(void)
                                    362 ;	-----------------------------------------
                                    363 ;	 function delay
                                    364 ;	-----------------------------------------
      000000                        365 _delay:
                           000007   366 	ar7 = 0x07
                           000006   367 	ar6 = 0x06
                           000005   368 	ar5 = 0x05
                           000004   369 	ar4 = 0x04
                           000003   370 	ar3 = 0x03
                           000002   371 	ar2 = 0x02
                           000001   372 	ar1 = 0x01
                           000000   373 	ar0 = 0x00
                                    374 ;	Blinky.c:21: for(i=0; i<0xff; i++)
      000000 7F 00            [12]  375 	mov	r7,#0x00
                                    376 ;	Blinky.c:22: for(j=0; j<0xff; j++);
      000002                        377 00110$:
      000002 7D FF            [12]  378 	mov	r5,#0xff
      000004 7E 00            [12]  379 	mov	r6,#0x00
      000006                        380 00105$:
      000006 1D               [12]  381 	dec	r5
      000007 BD FF 01         [24]  382 	cjne	r5,#0xff,00130$
      00000A 1E               [12]  383 	dec	r6
      00000B                        384 00130$:
      00000B ED               [12]  385 	mov	a,r5
      00000C 4E               [12]  386 	orl	a,r6
      00000D 70 F7            [24]  387 	jnz	00105$
                                    388 ;	Blinky.c:21: for(i=0; i<0xff; i++)
      00000F 0F               [12]  389 	inc	r7
      000010 BF FF 00         [24]  390 	cjne	r7,#0xff,00132$
      000013                        391 00132$:
      000013 40 ED            [24]  392 	jc	00110$
                                    393 ;	Blinky.c:23: }
      000015 22               [24]  394 	ret
                                    395 ;------------------------------------------------------------
                                    396 ;Allocation info for local variables in function 'main'
                                    397 ;------------------------------------------------------------
                                    398 ;	Blinky.c:29: void main(void)
                                    399 ;	-----------------------------------------
                                    400 ;	 function main
                                    401 ;	-----------------------------------------
      000016                        402 _main:
                                    403 ;	Blinky.c:31: while(1) {
      000016                        404 00102$:
                                    405 ;	Blinky.c:32: P1_0 = 1;
                                    406 ;	assignBit
      000016 D2 90            [12]  407 	setb	_P1_0
                                    408 ;	Blinky.c:33: delay();
      000018 12r00r00         [24]  409 	lcall	_delay
                                    410 ;	Blinky.c:34: P1_0 = 0;
                                    411 ;	assignBit
      00001B C2 90            [12]  412 	clr	_P1_0
                                    413 ;	Blinky.c:35: delay();
      00001D 12r00r00         [24]  414 	lcall	_delay
                                    415 ;	Blinky.c:37: }
      000020 80 F4            [24]  416 	sjmp	00102$
                                    417 	.area CSEG    (CODE)
                                    418 	.area CONST   (CODE)
                                    419 	.area XINIT   (CODE)
                                    420 	.area CABS    (ABS,CODE)
