/*

  a limited font set for the 8x8 LED matrix
  uses only the first 5 columns of the display

*/

#pragma once

#include <Arduino.h>

const byte FONT_WIDTH = 5;
const char FONT_FIRST_CHARACTER = 0x20;

static const byte FONT[][FONT_WIDTH] =
{
 {0x00, 0x00, 0x00, 0x00, 0x00} // 20
,{B00000000,
  B00000000,
  B10111110,
  B00000000,
  B00000000} // 21 !
,{B00000000,
  B00000110,
  B00000000,
  B00000110,
  B00000000}  // 22 "
,{B00101000,
  B11111110,
  B00101000,
  B11111110,
  B00101000} // 23 #
,{0x00, 0x00, 0x00, 0x00, 0x00} // 24 $
,{0x00, 0x00, 0x00, 0x00, 0x00} // 25 %
,{0x00, 0x00, 0x00, 0x00, 0x00} // 26 &
,{B00000000,
  B00000000,
  B00000000,
  B00000110,
  B00000000} // 27 '
,{B00111000,
  B01000100,
  B10000010,
  B00000000,
  B00000000} // 28 (
,{B00000000,
  B00000000,
  B10000010,
  B01000100,
  B00111000} // 29 )
,{0x00, 0x00, 0x00, 0x00, 0x00} // 2a *
,{B00010000,
  B00010000,
  B01111100,
  B00010000,
  B00010000} // 2b +
,{0x00, 0x00, 0x00, 0x00, 0x00} // 2c ,
,{B00000000,
  B00010000,
  B00010000,
  B00010000,
  B00000000} // 2d -
,{B00000000,
  B00000000,
  B10000000,
  B00000000,
  B00000000} // 2e .
,{0x00, 0x00, 0x00, 0x00, 0x00} // 2f /
,{0x00, 0x00, 0x00, 0x00, 0x00} // 30 0
,{0x00, 0x00, 0x00, 0x00, 0x00} // 31 1
,{0x00, 0x00, 0x00, 0x00, 0x00} // 32 2
,{0x00, 0x00, 0x00, 0x00, 0x00} // 33 3
,{0x00, 0x00, 0x00, 0x00, 0x00} // 34 4
,{0x00, 0x00, 0x00, 0x00, 0x00} // 35 5
,{0x00, 0x00, 0x00, 0x00, 0x00} // 36 6
,{0x00, 0x00, 0x00, 0x00, 0x00} // 37 7
,{0x00, 0x00, 0x00, 0x00, 0x00} // 38 8
,{0x00, 0x00, 0x00, 0x00, 0x00} // 39 9
,{0x00, 0x00, 0x00, 0x00, 0x00} // 3a :
,{0x00, 0x00, 0x00, 0x00, 0x00} // 3b ;
,{0x00, 0x00, 0x00, 0x00, 0x00} // 3c <
,{B00000000,
  B01010000,
  B01010000,
  B01010000,
  B00000000} // 3d =
,{0x00, 0x00, 0x00, 0x00, 0x00} // 3e >
,{0x00, 0x00, 0x00, 0x00, 0x00} // 3f ?
,{0x00, 0x00, 0x00, 0x00, 0x00} // 40 @
,{B11111100,
  B00010010,
  B00010010,
  B00010010,
  B11111100} // 41 A
,{0x00, 0x00, 0x00, 0x00, 0x00} // 42 B
,{0x00, 0x00, 0x00, 0x00, 0x00} // 43 C
,{0x00, 0x00, 0x00, 0x00, 0x00} // 44 D
,{0x00, 0x00, 0x00, 0x00, 0x00} // 45 E
,{0x00, 0x00, 0x00, 0x00, 0x00} // 46 F
,{0x00, 0x00, 0x00, 0x00, 0x00} // 47 G
,{0x00, 0x00, 0x00, 0x00, 0x00} // 48 H
,{0x00, 0x00, 0x00, 0x00, 0x00} // 49 I
,{0x00, 0x00, 0x00, 0x00, 0x00} // 4a J
,{0x00, 0x00, 0x00, 0x00, 0x00} // 4b K
,{0x00, 0x00, 0x00, 0x00, 0x00} // 4c L
,{B11111100,
  B00001000,
  B00010000,
  B00001000,
  B11111100} // 4d M
,{B11111100,
  B00001000,
  B00010000,
  B00100000,
  B11111100} // 4e N
,{B01111100,
  B10000010,
  B10000010,
  B10000010,
  B01111100} // 4f O
,{0x00, 0x00, 0x00, 0x00, 0x00} // 50 P
,{0x00, 0x00, 0x00, 0x00, 0x00} // 51 Q
,{0x00, 0x00, 0x00, 0x00, 0x00} // 52 R
,{0x00, 0x00, 0x00, 0x00, 0x00} // 53 S
,{0x00, 0x00, 0x00, 0x00, 0x00} // 54 T
,{0x00, 0x00, 0x00, 0x00, 0x00} // 55 U
,{0x00, 0x00, 0x00, 0x00, 0x00} // 56 V
,{0x00, 0x00, 0x00, 0x00, 0x00} // 57 W
,{0x00, 0x00, 0x00, 0x00, 0x00} // 58 X
,{0x00, 0x00, 0x00, 0x00, 0x00} // 59 Y
,{0x00, 0x00, 0x00, 0x00, 0x00} // 5a Z
,{0x00, 0x00, 0x00, 0x00, 0x00} // 5b [
,{0x00, 0x00, 0x00, 0x00, 0x00} // 5c ¥
,{0x00, 0x00, 0x00, 0x00, 0x00} // 5d ]
,{0x00, 0x00, 0x00, 0x00, 0x00} // 5e ^
,{B10000000,
  B10000000,
  B10000000,
  B10000000,
  B10000000} // 5f _
,{0x00, 0x00, 0x00, 0x00, 0x00} // 60 `
,{B01110000,
  B10001000,
  B10001000,
  B01010000,
  B11111000} // 61 a
,{B11111110,
  B10001000,
  B10001000,
  B01001000,
  B01110000} // 62 b
,{B01110000,
  B10001000,
  B10001000,
  B01001000,
  B00000000} // 63 c
,{B01110000,
  B10001000,
  B10001000,
  B01001000,
  B11111110} // 64 d
,{0x00, 0x00, 0x00, 0x00, 0x00} // 65 e
,{0x00, 0x00, 0x00, 0x00, 0x00} // 66 f
,{0x00, 0x00, 0x00, 0x00, 0x00} // 67 g
,{0x00, 0x00, 0x00, 0x00, 0x00} // 68 h
,{B00000000,
  B10010000,
  B11110100,
  B10000000,
  B00000000} // 69 i
,{0x00, 0x00, 0x00, 0x00, 0x00} // 6a j
,{0x00, 0x00, 0x00, 0x00, 0x00} // 6b k
,{0x00, 0x00, 0x00, 0x00, 0x00} // 6c l
,{B11110000,
  B00001000,
  B00110000,
  B00001000,
  B11110000} // 6d m
,{B11111000,
  B00010000,
  B00001000,
  B00001000,
  B11110000} // 6e n
,{B01110000,
  B10001000,
  B10001000,
  B10001000,
  B01110000} // 6f o
,{0x00, 0x00, 0x00, 0x00, 0x00} // 70 p
,{0x00, 0x00, 0x00, 0x00, 0x00} // 71 q
,{B11111000,
  B00010000,
  B00001000,
  B00001000,
  B00010000} // 72 r
,{0x00, 0x00, 0x00, 0x00, 0x00} // 73 s
,{0x00, 0x00, 0x00, 0x00, 0x00} // 74 t
,{B01111000,
  B10000000,
  B10000000,
  B01000000,
  B11111000} // 75 u
,{B00111000,
  B01000000,
  B10000000,
  B01000000,
  B00111000}  // 76 v
,{0x00, 0x00, 0x00, 0x00, 0x00} // 77 w
,{0x00, 0x00, 0x00, 0x00, 0x00} // 78 x
,{0x00, 0x00, 0x00, 0x00, 0x00} // 79 y
,{0x00, 0x00, 0x00, 0x00, 0x00} // 7a z
,{B00010000,
  B01101100,
  B10000010,
  B00000000,
  B00000000} // 7b {
,{B00000000,
  B00000000,
  B11111111,
  B00000000,
  B00000000} // 7c |
,{B00000000,
  B00000000,
  B10000010,
  B01101100,
  B00010000}  // 7d }
,{B00010000,
  B00111000,
  B01010100,
  B00010000,
  B00010000} // 7e ←
,{B00010000,
  B00010000,
  B01010100,
  B00111000,
  B00010000}  // 7f →
};

const byte FONT_COUNT = sizeof(FONT) / FONT_WIDTH;
